;; https://github.com/richard-livingston/json-view
(var JSONView (require "json-view"))

(def setup-json-view [container json-data on-change]
     ;; can also call (JSONView name data)
     ;; but name doesn't seem useful
     (var view (new JSONView json-data))
     (when on-change
           (view.on "change" on-change))
     (view.expand true)
     (while container.firstChild
            (container.removeChild container.firstChild))
     (|>
      (jq-miccup ["link"
                  {href: "node_modules/json-view/devtools.css"
                   type: "text/css"
                   rel: "stylesheet"
                   media: "screen,print"}])
      (.appendTo container))
     (container.appendChild view.dom)
     view)

;; example
(comment
 (var container (document.getElementById "inject-container")
      data {hello : "world"
            doubleClick : "me to edit"
            a : null
            b : true
            c : false
            d : 1
            e : {nested : "object"}
            f : [1 4 9]
            })
 (setup-json-view container
                  data
                  (#(key old-val new-val)
                    (console.log "change" key old-val "=>" new-val)
                    (console.log view.value))))


;; requires $style-class
;; move to tab-panel or something
(def setup-json-switcher-view [container seed-json on-change]
     ;; style classes
     (var tab-bar-class ($style-class {position: "relative"
                                       float: "left"
                                       background: "#335"
                                       color: "#fff"
                                       padding: "2px"
                                       margin: "2px"
                                       width: "100%"
                                       height: "100%"
                                       })
          ul-style-class ($style-class {"list-style-type": "none"}))
     (var ui-state {selected-tab: (m.prop 'json-view)
                    display-data: (m.prop {})})

     (when seed-json
           (ui-state.display-data seed-json))
     (m.mount
      container
      {controller: (#>
                    (console.info "in controller")
                    {})
       tab-def: {json-view: {label: "json view"
                             render: (#>
                                      (console.log "rendering the view")
                                      ["div"
                                       {config: (#(dom)
                                                  (setup-json-view
                                                   dom
                                                   (ui-state.display-data)
                                                   (#(key oldv newv)
                                                     (m-transact!
                                                      (ui-state.display-data this.value)))))}])}

                 raw-json: {label: "raw json"
                            render: (#>
                                     (console.log "rendering the raw")
                                     ["pre"
                                      {style: {width: "100%"
                                               height: "100%"}}
                                      (JSON.stringify
                                       (ui-state.display-data)
                                       null 4)])}}
       view: (#(ctrl)
               ;; self.view is the view object here, for example
               (var self this)
               (def get-selected-tab-or-default []
                    (|> (or (ui-state.selected-tab)
                            (|> self.tab-def
                                (Object.keys)
                                (first)))
                        (get self.tab-def #)))
               (var table (|> (m-miccup
                               ["div"
                                {class: tab-bar-class}
                                ["style"
                                 (+ "ul." ul-style-class " { list-style-type: none }")
                                 (+ "ul." ul-style-class " li { float: left; border: 1px solid red; margin: 2px; padding: 2px; width: 100px; }")
                                 (+ "ul." ul-style-class " li:hover { background: gray; color: black; }")
                                 (+ "ul." ul-style-class " li.active { background: white; color: black; }")]
                                (scoped
                                 ["ul"
                                  {class: ul-style-class}
                                  (mapcar (#(k i)
                                            [(+ "li"
                                                (if (= k (ui-state.selected-tab))
                                                    ".active"
                                                    ""))
                                             {onclick: (#>
                                                        (ui-state.selected-tab k)) }
                                             (get self.tab-def k 'label)
                                             ])
                                          (Object.keys self.tab-def))])
                                ["div" {style: {clear: "both" } }]
                                ["div"
                                 {style: {width: "100%"
                                          height: "100%"
                                          color: "black"
                                          background: "white"}
                                  id: (|> (get-selected-tab-or-default)
                                          (get 'label)
                                          (+ "panel-" #))}
                                 ;; note function call
                                 ((|> (get-selected-tab-or-default)
                                      (get 'render)))]
                                ]))))}))

(setup-json-switcher-view
 (document.getElementById "content-container"))
