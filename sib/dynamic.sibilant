(var click-hist (m.prop []))
(set window 'click-hist click-hist)
(scoped
 (var ui { controller: (#>
                        (console.info "in controller")
                        { })
           
           view: (#(ctrl)
                   (var self this
                        table (m "div.grid"
                                 { style: { position: "relative"
                                            float: "left"
                                            background: "#444"
                                            color: "#fff"
                                            padding: "2px"
                                            margin: "2px"
                                            width: (+ (* (+ self.panel-w
                                                            (* 2 self.panel-border-width)
                                                            self.panel-margin)
                                                         self.panel-x)
                                                      "px")
                                            height: (+ (* (+ self.panel-h
                                                             (* 2 self.panel-border-width)
                                                             self.panel-margin)
                                                          self.panel-y)
                                                       "px")
                                            } }
                                 (m "ul"
                                    {}
                                  (scoped
                                   (var rtn [])
                                   (each (locater i) (click-hist)
                                         (rtn.push
                                          (m "li"
                                             (m "div"
                                                (m "span"
                                                   (+ "" i ". "))


                                                (m "button"
                                                   { style: { margin: "0.2em"
                                                              width: "1.3em"
                                                              height: "1.3em"
                                                              lineHeight: "1.3em"
                                                              color: "white"
                                                              align: "center"
                                                              textAlign: "center"
                                                              verticalAlign: "middle"
                                                              borderRadius: "3px"
                                                              backgroundColor: "red"
                                                              }
                                                     onclick: (#>
                                                               (var head (|> (click-hist)
                                                                             (.slice 0 i))
                                                                    tail (|> (click-hist)
                                                                             (.slice (+ 1 i))))
                                                               (click-hist (head.concat tail))) }
                                                   (m "i" { class: "fa fa-times" } ))
                                                (m "button"
                                                   { onclick: (#>
                                                               (var exec-string
                                                                    (if (or (= locater.tag "button")
                                                                            (= locater.tag "a")
                                                                            (and (= locater.tag "input")
                                                                                 (or (= locater.type "submit")
                                                                                     (= locater.type "button"))))
                                                                        (+ "common.click_selector('" locater.selector "')")
                                                                        null
                                                                        ;; (+ "common.fire_event_on('" locater.selector "', 'Click')")
                                                                        ))
                                                               (when exec-string
                                                                     (|> (get_webview)
                                                                         (execjs
                                                                          exec-string)))
                                                               ) }
                                                   (JSON.stringify locater)))
                                             )))
                                   rtn))
                                 ;; (m "button"
                                 ;;    { onclick: (#> (console.log "CLICKEDZ")
                                 ;;                   (|> (click-hist)
                                 ;;                       (.push "thing"))) }
                                 ;;    "click me!")
                                 )))})
 (m.mount (document.getElementById "control-container")
          ui))

(var Dynamic { exec: (#(channel arg)
                       (var func (get Dynamic channel))
                       (when func (func arg))) })
(set Dynamic Const.WEBVIEW_ELEMENT_CLICK
     (#(js)
       (var locater (JSON.parse js))
       (m.startComputation)
       (|> (click-hist)
           (.push locater))
       (m.endComputation)))

(set window 'Dynamic Dynamic)
(def miccup (hiccup)
     (if (not (Array.isArray hiccup))
         hiccup
         (if (Array.isArray (first hiccup))
             ;; nested array
             (scoped
              (var out [])

              (each (hh i) hiccup
                    (out.push (apply m hh)))
              out)
             ;; normal hiccup
             (scoped
              (var tag (first hiccup)
                   has-attr? (= (typeof (second hiccup)) "object")
                   attr (if has-attr? (second hiccup) {})
                   remainder-start (if has-attr? 2 1)
                   out [tag attr])
              (each (hh i) (hiccup.slice remainder-start)
                    (out.push (miccup hh)))
              (apply m out)))))

(var control-state (m.prop { 'session-list: ["a" "b" "c"]
                             
                            }))
(def mapcar (func list)
     (var rtn [])
     (each (o) list
           (rtn.push (func o)))
     rtn)
(scoped
 (def action-list-view ()
      (scoped
       (var rtn [])
       (each (locater i) (click-hist)
             (rtn.push
              (m "li"
                 (m "div"
                    (m "span"
(var control-state {session-list: (m.prop [])
                    active-session: (m.prop)})

;; yaml based data control
(var jsyaml (require "js-yaml")
     fs (require "fs")
     electron (require "electron")
     DATA-DIR "data"
     __data-dir-path (|> (path.join global.__dirname DATA-DIR)
                         (path.resolve)))

                    (m "button"
                       { style: { margin: "0.2em"
                                  width: "1.3em"
                                  height: "1.3em"
                                  lineHeight: "1.3em"
                                  color: "white"
                                  align: "center"
                                  textAlign: "center"
                                  verticalAlign: "middle"
                                  borderRadius: "3px"
                                  backgroundColor: "red" }
                         onclick: (#>
                                   (var head (|> (click-hist)
                                                 (.slice 0 i))
                                        tail (|> (click-hist)
                                                 (.slice (+ 1 i))))
                                   (click-hist (head.concat tail))) }
                       (m "i" { class: "fa fa-times" } ))
                    (m "button"
                       { onclick: (#>
                                   (var exec-string
                                        (if (or (= locater.tag "button")
                                                (= locater.tag "a")
                                                (and (= locater.tag "input")
                                                     (or (= locater.type "submit")
                                                         (= locater.type "button"))))
                                            (+ "common.click_selector('" locater.selector "')")
                                            null
                                            ;; (+ "common.fire_event_on('" locater.selector "', 'Click')")
                                            ))
                                   (when exec-string
                                         (|> (get_webview)
                                             (execjs
                                              exec-string)))
                                   ) }
                       (JSON.stringify locater)))

;; housekeeping
(when (not (fs.existsSync __data-dir-path))
      (fs.mkdirSync __data-dir-path))

(fs.readdir
 __data-dir-path
 (#(err file-list)
   (var re-yml (regex "yml$"))
   (m.startComputation)
   (control-state.session-list
    (|> file-list
        (.filter (#(fname)
                   (fname.match re-yml)))
        (.map (#(fname)
                (|> (path.join __data-dir-path fname)
                    (fs.readFileSync "utf-8")
                    (jsyaml.safeLoad)
                    (tap (set 'filename fname)))))))
   (m.endComputation)))

                 )))
       rtn))

 (var ui { controller: (#>
                        (console.info "in controller")
                        { })
           view: (#(ctrl)
                   (var self this
                        table (|> (miccup
                                   ["div"
                                     { style: { position: "relative"
                                                float: "left"
                                                background: "#444"
                                                color: "#fff"
                                                padding: "2px"
                                                margin: "2px"
                                                ;; width: (+ (* (+ self.panel-w
                                                ;;                 (* 2 self.panel-border-width)
                                                ;;                 self.panel-margin)
                                                ;;              self.panel-x)
                                                ;;           "px")
                                                ;; height: (+ (* (+ self.panel-h
                                                ;;                  (* 2 self.panel-border-width)
                                                ;;                  self.panel-margin)
                                                ;;               self.panel-y)
                                                ;;            "px")
                                                width: "100%"
                                                height: "100%"
                                                } }
                                     ["style"
                                       "ul.tab-list { list-style-type: none }"
                                       "ul.tab-list li { float: left; border: 1px solid red; margin: 2px; padding: 2px; width: 100px; }"
                                       "ul.tab-list li:hover { background: gray; color: black; }"
                                       "ul.tab-list li.active { background: white; color: black; }"
                                       ]
                                     (scoped
                                      ["ul.tab-list"
                                        {  }
                                        [["li.active"
                                           {  }
                                           "saved urls"]
                                          ["li"
                                            {  }
                                            "action list"]]
                                        ])
                                     ["div" { style: { clear: "both" } }]
                                     ["div"
                                       { style: { width: "100%"
                                                  height: "100%"
                                                  color: "black"
                                                  background: "white"
                                                  }}
                                       ["b" "sessions"]
                                       ["hr"]
                                       (scoped
                                        (mapcar
                                         (#(session)
                                           ["div"
                                             {  }
                                             (+ " - " session)])
                                         (or (get (control-state) 'session-list)
                                             [])))

                                       ["hr"]
                                       ["div"
                                         (action-list-view)]
                                       ]
                                     ])
                                  (tap (console.log)))))})
 (m.mount (document.getElementById "control-container")
          ui))
