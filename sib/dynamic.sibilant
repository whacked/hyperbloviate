(var click-hist (m.prop []))
(set window 'click-hist click-hist)
(scoped
 (var ui { controller: (#>
                        (console.info "in controller")
                        { })
           
           view: (#(ctrl)
                   (var self this
                        table (m "div.grid"
                                 { style: { position: "relative"
                                            float: "left"
                                            background: "#444"
                                            color: "#fff"
                                            padding: "2px"
                                            margin: "2px"
                                            width: (+ (* (+ self.panel-w
                                                            (* 2 self.panel-border-width)
                                                            self.panel-margin)
                                                         self.panel-x)
                                                      "px")
                                            height: (+ (* (+ self.panel-h
                                                             (* 2 self.panel-border-width)
                                                             self.panel-margin)
                                                          self.panel-y)
                                                       "px")
                                            } }
                                 (m "ul"
                                    {}
                                  (scoped
                                   (var rtn [])
                                   (each (locater i) (click-hist)
                                         (rtn.push
                                          (m "li"
                                             (m "div"
                                                (m "span"
                                                   (+ "" i ". "))


                                                (m "button"
                                                   { style: { margin: "0.2em"
                                                              width: "1.3em"
                                                              height: "1.3em"
                                                              lineHeight: "1.3em"
                                                              color: "white"
                                                              align: "center"
                                                              textAlign: "center"
                                                              verticalAlign: "middle"
                                                              borderRadius: "3px"
                                                              backgroundColor: "red"
                                                              }
                                                     onclick: (#>
                                                               (var head (|> (click-hist)
                                                                             (.slice 0 i))
                                                                    tail (|> (click-hist)
                                                                             (.slice (+ 1 i))))
                                                               (click-hist (head.concat tail))) }
                                                   (m "i" { class: "fa fa-times" } ))
                                                (m "button"
                                                   { onclick: (#>
                                                               (var exec-string
                                                                    (if (or (= locater.tag "button")
                                                                            (= locater.tag "a")
                                                                            (and (= locater.tag "input")
                                                                                 (or (= locater.type "submit")
                                                                                     (= locater.type "button"))))
                                                                        (+ "common.click_selector('" locater.selector "')")
                                                                        null
                                                                        ;; (+ "common.fire_event_on('" locater.selector "', 'Click')")
                                                                        ))
                                                               (when exec-string
                                                                     (|> (get_webview)
                                                                         (execjs
                                                                          exec-string)))
                                                               ) }
                                                   (JSON.stringify locater)))
                                             )))
                                   rtn))
                                 ;; (m "button"
                                 ;;    { onclick: (#> (console.log "CLICKEDZ")
                                 ;;                   (|> (click-hist)
                                 ;;                       (.push "thing"))) }
                                 ;;    "click me!")
                                 )))})
 (m.mount (document.getElementById "control-container")
          ui))

(var Dynamic { exec: (#(channel arg)
                       (var func (get Dynamic channel))
                       (when func (func arg))) })
(set Dynamic Const.WEBVIEW_ELEMENT_CLICK
     (#(js)
       (var locater (JSON.parse js))
       (m.startComputation)
       (|> (click-hist)
           (.push locater))
       (m.endComputation)))

(set window 'Dynamic Dynamic)
(def miccup (hiccup)
     (if (not (Array.isArray hiccup))
         hiccup
         (if (Array.isArray (first hiccup))
             ;; nested array
             (scoped
              (var out [])

              (each (hh i) hiccup
                    (out.push (apply m hh)))
              out)
             ;; normal hiccup
             (scoped
              (var tag (first hiccup)
                   has-attr? (= (typeof (second hiccup)) "object")
                   attr (if has-attr? (second hiccup) {})
                   remainder-start (if has-attr? 2 1)
                   out [tag attr])
              (each (hh i) (hiccup.slice remainder-start)
                    (out.push (miccup hh)))
              (apply m out)))))
